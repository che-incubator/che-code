parameters:
  - name: VSCODE_BUILD_WIN32
    type: boolean
    default: false
  - name: VSCODE_BUILD_WIN32_32BIT
    type: boolean
    default: false
  - name: VSCODE_BUILD_WIN32_ARM64
    type: boolean
    default: false
  - name: VSCODE_QUALITY
    type: string

steps:
  - task: Npm@1
    displayName: Download openssl prebuilt
    inputs:
      command: custom
      customCommand: pack @vscode-internal/openssl-prebuilt@0.0.5
      customRegistry: useFeed
      customFeed: 'Monaco/openssl-prebuilt'
      workingDir: $(Build.ArtifactStagingDirectory)

  - powershell: |
      mkdir $(Build.ArtifactStagingDirectory)/openssl
      tar -xvzf $(Build.ArtifactStagingDirectory)/vscode-internal-openssl-prebuilt-0.0.5.tgz --strip-components=1 --directory=$(Build.ArtifactStagingDirectory)/openssl
    displayName: Extract openssl prebuilt

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"

  - template: ../mixin-distro-win32.yml
    parameters:
      VSCODE_QUALITY: ${{ variables.VSCODE_QUALITY }}

  - powershell: |
      . build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { node build/azure-pipelines/cli/prepare.js }
    displayName: Prepare CLI build
    env:
      GITHUB_TOKEN: "$(github-distro-mixin-password)"

  - template: ../cli/install-rust-win32.yml
    parameters:
      targets:
        - ${{ if eq(parameters.VSCODE_BUILD_WIN32, true) }}:
          - x86_64-pc-windows-msvc
        - ${{ if eq(parameters.VSCODE_BUILD_WIN32_ARM64, true) }}:
          - aarch64-pc-windows-msvc
        - ${{ if eq(parameters.VSCODE_BUILD_WIN32_32BIT, true) }}:
          - i686-pc-windows-msvc

  - ${{ if eq(parameters.VSCODE_BUILD_WIN32, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_CLI_TARGET: x86_64-pc-windows-msvc
        VSCODE_CLI_ARTIFACT: unsigned_vscode_cli_win32_x64_cli
        VSCODE_CLI_ENV:
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/x64-windows-static-md/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/x64-windows-static-md/include
          RUSTFLAGS: '-C target-feature=+crt-static'

  - ${{ if eq(parameters.VSCODE_BUILD_WIN32_ARM64, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_CLI_TARGET: aarch64-pc-windows-msvc
        VSCODE_CLI_ARTIFACT: unsigned_vscode_cli_win32_arm64_cli
        VSCODE_CLI_ENV:
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm64-windows-static-md/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm64-windows-static-md/include
          RUSTFLAGS: '-C target-feature=+crt-static'

  - ${{ if eq(parameters.VSCODE_BUILD_WIN32_32BIT, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_CLI_TARGET: i686-pc-windows-msvc
        VSCODE_CLI_ARTIFACT: unsigned_vscode_cli_win32_ia32_cli
        VSCODE_CLI_ENV:
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/x86-windows-static-md/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/x86-windows-static-md/include
          RUSTFLAGS: '-C target-feature=+crt-static'
