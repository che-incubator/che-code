#
# Copyright (c) 2022 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

schemaVersion: 2.1.0
metadata:
  name: che-code
components:

  - name: dev
    container:
      image: quay.io/che-incubator/che-code-dev:insiders
      memoryLimit: 12Gi
      memoryRequest: 512Mi
      cpuRequest: 500m
      cpuLimit: 3500m
      endpoints:
        - exposure: public
          name: dev
          secure: true
          protocol: http
          targetPort: 8000

  - name: projects
    volume:
      size: 7Gi

commands:
  - id: yarn-prepare
    exec:
      label: Install node dependencies
      component: dev
      workingDir: ${PROJECTS_ROOT}/che-code
      commandLine: |
        yarn prepare
      group:
        kind: build

  - id: yarn-build
    exec:
      label: Compile with Yarn
      component: dev
      workingDir: ${PROJECTS_ROOT}/che-code
      commandLine: |
        yarn watch
      group:
        kind: build
        isDefault: true

  - id: yarn-run
    exec:
      label: Run VS Code server on port 8000
      component: dev
      workingDir: ${PROJECTS_ROOT}/che-code
      commandLine: |
        yarn server
      group:
        kind: run
        isDefault: true

  - id: podman-compile-libc
    exec:
      label: Compile che-code in a container using Podman
      component: dev
      workingDir: ${PROJECTS_ROOT}/che-code
      commandLine: |
        echo "Compile libc mod"
        cp -f build/dockerfiles/linux-libc.Dockerfile build/dockerfiles/linux-libc.no-test.Dockerfile
        REMOVE_FROM="### Beginning of tests"
        REMOVE_TO="### Ending of tests"
        sed -i "/${REMOVE_FROM}/,/${REMOVE_TO}/d" build/dockerfiles/linux-libc.no-test.Dockerfile
        podman build -f build/dockerfiles/linux-libc.no-test.Dockerfile -t linux-libc-amd64 .
      group:
        kind: run

  - id: podman-assemble-che-code
    exec:
      label: Build che-code image using Podman
      component: dev
      workingDir: ${PROJECTS_ROOT}/che-code
      commandLine: |
        echo "Build che-code image"
        cp -f build/dockerfiles/assembly.Dockerfile build/dockerfiles/assembly.libc.Dockerfile
        REPLACE="FROM linux-musl-amd64 as linux-musl-content"
        sed -i -r -e "s|${REPLACE}||" build/dockerfiles/assembly.libc.Dockerfile
        REPLACE="COPY --from=linux-musl-content --chown=0:0 /checode-linux-musl /mnt/rootfs/checode-linux-musl"
        sed -i -r -e "s|${REPLACE}||" build/dockerfiles/assembly.libc.Dockerfile
        podman build -f build/dockerfiles/assembly.libc.Dockerfile -t che-code .
      group:
        kind: run
