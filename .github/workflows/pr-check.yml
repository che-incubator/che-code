#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Pull Request Check

# Trigger the workflow on pull request
on: [pull_request]

jobs:

  build:
    name: build
    strategy:
      fail-fast: false
      matrix:
        dist: [ 'musl', 'libc' ]
        arch: ['amd64']
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Build
        env:
          # https://github.com/microsoft/vscode-ripgrep#github-api-limit-note
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker buildx build --memory-swap -1 --memory 10g --platform linux/${{matrix.arch}} -f build/dockerfiles/linux-${{matrix.dist}}.Dockerfile --load -t linux-${{matrix.dist}}-${{matrix.arch}} .
      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "linux-${{matrix.dist}}-${{matrix.arch}}"

  assemble:
    name: assemble
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cleanup docker images
        run: |
          docker system prune -af

      - name: Download linux-libc-amd64 image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "linux-libc-amd64"

      - name: Download linux-musl image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "linux-musl-amd64"

      - name: Display docker images
        run: |
          docker images

      - name: Docker Build
        run: |
          docker buildx build --platform linux/amd64 -f build/dockerfiles/assembly.Dockerfile --load -t che-code-image .

      - name: Upload assembly image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "che-code-image"

      - name: Store PR info
        run: |
          echo "${{ github.event.number }}" > PR_NUMBER
          echo "${{ github.event.pull_request.head.sha }}" > PR_SHA

      - name: Upload PR NUMBER
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-number
          path: PR_NUMBER

      - name: Upload PR SHA
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-sha
          path: PR_SHA

  dev:
    name: dev
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cleanup docker images
        run: |
          docker system prune -af

      - name: Docker Build
        run: |
          docker buildx build --platform linux/amd64 -f build/dockerfiles/dev.Dockerfile --load -t che-dev-image .

      - name: Save che-dev image
        run: |
          docker save che-dev-image | gzip > che-dev-image.tgz

      - uses: actions/upload-artifact@v3
        with:
          name: che-dev-image
          path: che-dev-image.tgz
