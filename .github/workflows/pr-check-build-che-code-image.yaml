#
# Copyright (c) 2023 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#

name: Build che-code images Pull Request check

# Trigger the workflow on pull request
on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - devfile.yaml
      - '.che/*'
      - '.rebase/*'

jobs:
  build-che-code:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout che-code source code
        uses: actions/checkout@v3

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_PULL_REQUESTS_USERNAME }}
          password: ${{ secrets.QUAY_PULL_REQUESTS_PASSWORD }}

      - name: Compile linux-libc
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --progress=plain \
            -f build/dockerfiles/linux-libc.Dockerfile \
            -t linux-libc-amd64 .

      - name: Compile linux-musl
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --progress=plain \
            -f build/dockerfiles/linux-musl.Dockerfile \
            -t linux-musl-amd64 .

      - name: Display docker images
        run: |
          docker images

      - name: Assemble che-code
        run: |
          PR_NUMBER="${{ github.event.number }}"
          echo "Pull request $PR_NUMBER"

          IMAGE_NAME="quay.io/che-incubator-pull-requests/che-code:pr-$PR_NUMBER-amd64"
          echo "_IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

          docker buildx build \
            --platform linux/amd64 \
            --progress=plain \
            --push \
            -f build/dockerfiles/assembly.Dockerfile \
            -t ${IMAGE_NAME} .

      - name: Display docker images (final)
        run: |
          docker images

      - name: 'Comment PR'
        uses: actions/github-script@v6
        with:
         script: |
           const { repo: { owner, repo } } = context;
           await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Pull Request Che-Code image published:\nðŸ‘‰ [${process.env._IMAGE_NAME}](https://${process.env._IMAGE_NAME})`
            })
