#
# Copyright (c) 2021-2025 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: image-publish

on:
  push:
    branches: 
      - main
    tags:
      - '7.*.*'

jobs:

  build:
    name: build
    strategy:
      fail-fast: false
      matrix:
        dist: [ 'musl', 'libc-ubi8', 'libc-ubi9' ]
        runners: ['ubuntu-22.04', 'ubuntu-22.04-arm']
    runs-on: ${{matrix.runners}}
    steps:
      - name: Set arch environment variable
        run: |
          if [[ ${{matrix.runners}} == 'ubuntu-22.04' ]]; then
            echo arch="amd64" >> $GITHUB_ENV
          else
            echo arch="arm64" >> $GITHUB_ENV
          fi
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Build
        env:
          # https://github.com/microsoft/vscode-ripgrep#github-api-limit-note
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker buildx build --memory-swap -1 --memory 10g --platform linux/${{env.arch}} -f build/dockerfiles/linux-${{matrix.dist}}.Dockerfile --load -t linux-${{matrix.dist}}-${{env.arch}} .
      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "linux-${{matrix.dist}}-${{env.arch}}"

  assemble:
    name: assemble
    needs: build
    strategy:
      fail-fast: false
      matrix:
        runners: ['ubuntu-22.04', 'ubuntu-22.04-arm']
    runs-on: ${{matrix.runners}}
    steps:
      - name: Set arch environment variable
        run: |
          if [[ ${{matrix.runners}} == 'ubuntu-22.04' ]]; then
            echo arch="amd64" >> $GITHUB_ENV
          else
            echo arch="arm64" >> $GITHUB_ENV
          fi
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download linux-libc-ubi8-amd64 image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "linux-libc-ubi8-${{env.arch}}"
      - name: Download linux-libc-ubi9-amd64 image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "linux-libc-ubi9-${{env.arch}}"
      - name: Download linux-musl image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "linux-musl-${{env.arch}}"
      - name: Display docker images
        run: docker images
      - name: Update assembly.Dockerfile
        run: |
          sed  "s|FROM linux-libc-ubi8|FROM linux-libc-ubi8-${{env.arch}}|" -i "build/dockerfiles/assembly.Dockerfile"
          sed  "s|FROM linux-libc-ubi9|FROM linux-libc-ubi9-${{env.arch}}|" -i "build/dockerfiles/assembly.Dockerfile"
          sed  "s|FROM linux-musl|FROM linux-musl-${{env.arch}}|" -i "build/dockerfiles/assembly.Dockerfile"
      - name: Assemble che-code
        run: |
          docker buildx build \
            --platform linux/${{env.arch}} \
            --progress=plain \
            -f build/dockerfiles/assembly.Dockerfile \
            -t che-code-${{env.arch}} .
      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "che-code-${{env.arch}}"

  publish:
    name: publish
    needs: assemble
    runs-on: ubuntu-22.04
    steps:
      - name: Set branch environment variable
        run: |
          BRANCH_NAME=${{ github.ref }}
          echo "BRANCH_NAME=${BRANCH_NAME##*/}" >> $GITHUB_ENV
      - name: Download che-code-arm64 image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "che-code-arm64"
      - name: Download che-code-amd64 image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "che-code-amd64"
      - name: Display docker images
        run: docker images
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "che-code-${{env.arch}}"
      - name: Create manifest
        run: |        
          docker manifest create che-code --amend che-code-amd64 --amend che-code-arm64
          docker manifest annotate che-code che-code-amd64 --os linux --arch amd64
          docker manifest annotate che-code che-code-arm64 --os linux --arch arm64
      - name: publish
        run: | 
          SHORT_SHA1=$(git rev-parse --short=7 HEAD)
          if [[ ${{env.BRANCH_NAME}} == main ]]; then
            docker tag che-code quay.io/abazko/che-code:next
            docker tag che-code quay.io/abazko/che-code:insiders
            docker tag che-code quay.io/abazko/che-code:insiders-${SHORT_SHA1}
          
            docker push quay.io/abazko/che-code:next
            docker push quay.io/abazko/che-code:insiders
            docker push quay.io/abazko/che-code:insiders-${SHORT_SHA1}
          elif [[ ${{env.BRANCH_NAME}} =~ ^7\.[0-9]+\.[0-9]+$ ]]; then
            docker tag che-code quay.io/abazko/che-code:latest
            docker tag che-code quay.io/abazko/che-code:${{ env.BRANCH_NAME }}
          
            docker push quay.io/abazko/che-code:latest
            docker push quay.io/abazko/che-code:${{ env.BRANCH_NAME }}
          fi          

  release-finish:
    name: release-finish
    needs: [build, assemble]
    runs-on: ubuntu-22.04
    # don't notify for cancelled builds
    if: (success() || failure()) && github.ref != 'refs/heads/main'
    steps:
      - name: Set variables
        run: |
          BRANCH_NAME=${{ github.ref }}
          echo "BRANCH_NAME=${BRANCH_NAME##*/}" >> $GITHUB_ENV

  dev:
    name: dev
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Docker Build and Push
        env:
          # https://github.com/microsoft/vscode-ripgrep#github-api-limit-note
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT_SHA1=$(git rev-parse --short=7 HEAD)
          docker buildx build --platform linux/amd64 -f build/dockerfiles/dev.Dockerfile --push -t quay.io/abazko/che-code-dev:insiders -t quay.io/abazko/che-code-dev:next -t quay.io/abazko/che-code-dev:insiders-${SHORT_SHA1} .

